{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useState } from 'react';\n\nconst axios = require('axios');\n\nconst GetFeaturedNfts = () => {\n  _s();\n\n  const [data, setData] = useState([]); // async function sample()\t{\n  // \tvar userPostsDoc =[]\n  // \t\tlet response=await axios.post('https://bitclout.com/api/v0/get-posts-for-public-key',{\n  // \t\tPublicKeyBase58Check:\"\",\n  // \t\tUsername:'manu',\n  // \t\tReaderPublicKeyBase58Check:\"BC1YLin2QZLzk3GwnjwxYt4P11oLBNXsJtBdBSq9LEvdmVS7MN1qEag\",\n  // \t\tNumToFetch: 10,\n  // \t\t}, \n  // \t\t{\n  // \t\theaders: {\n  // \t\t\t'Content-Type': 'application/json',\n  // \t\t\t'Access-Control-Allow-Origin': 'http://localhost:3000'\n  // \t\t}}).then(response=>{\n  // \t\t\t//console.log(response);\n  // \t\t\tsetData(response.data.Posts)\n  // \t\t\tconsole.log(\"This is a sample line\")\n  // \t\t\treturn response.data\n  // \t\t}).catch(err=>{\n  // \t\t})\n  // }\n\n  async function postData(url = 'https://bitclout.com/api/v0/get-posts-for-public-key', data = {}) {\n    // Default options are marked with *\n    const response = await fetch(url, {\n      method: 'POST',\n      // *GET, POST, PUT, DELETE, etc.\n      mode: 'cors',\n      // no-cors, *cors, same-origin\n      cache: 'no-cache',\n      // *default, no-cache, reload, force-cache, only-if-cached\n      credentials: 'same-origin',\n      // include, *same-origin, omit\n      PublicKeyBase58Check: \"\",\n      Username: 'manu',\n      ReaderPublicKeyBase58Check: \"BC1YLin2QZLzk3GwnjwxYt4P11oLBNXsJtBdBSq9LEvdmVS7MN1qEag\",\n      NumToFetch: 10,\n      headers: {\n        'Content-Type': 'application/json' // 'Content-Type': 'application/x-www-form-urlencoded',\n\n      },\n      redirect: 'follow',\n      // manual, *follow, error\n      referrerPolicy: 'no-referrer',\n      // no-referrer, *no-referrer-when-downgrade, origin, origin-when-cross-origin, same-origin, strict-origin, strict-origin-when-cross-origin, unsafe-url\n      body: JSON.stringify(data) // body data type must match \"Content-Type\" header\n\n    });\n    return response.json(); // parses JSON response into native JavaScript objects\n  }\n\n  postData().then(data => {\n    console.log(data); // JSON data parsed by `data.json()` call\n  });\n};\n\n_s(GetFeaturedNfts, \"hhQqYsxLIv1exGOzUvDGOVv6fXw=\");\n\n_c = GetFeaturedNfts;\nexport default GetFeaturedNfts;\n\nvar _c;\n\n$RefreshReg$(_c, \"GetFeaturedNfts\");","map":{"version":3,"sources":["/home/fahim/Desktop/projects/minted-react/src/functions/GetFeaturedNfts.js"],"names":["useState","axios","require","GetFeaturedNfts","data","setData","postData","url","response","fetch","method","mode","cache","credentials","PublicKeyBase58Check","Username","ReaderPublicKeyBase58Check","NumToFetch","headers","redirect","referrerPolicy","body","JSON","stringify","json","then","console","log"],"mappings":";;AAAA,SAASA,QAAT,QAAyB,OAAzB;;AAEA,MAAMC,KAAK,GAAGC,OAAO,CAAC,OAAD,CAArB;;AAGA,MAAMC,eAAe,GAAG,MAAM;AAAA;;AAE7B,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBL,QAAQ,CAAC,EAAD,CAAhC,CAF6B,CAI7B;AAEA;AAGA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AAEA;;AAEA,iBAAeM,QAAf,CAAwBC,GAAG,GAAG,sDAA9B,EAAsFH,IAAI,GAAG,EAA7F,EACG;AACF;AACA,UAAMI,QAAQ,GAAG,MAAMC,KAAK,CAACF,GAAD,EAAM;AAChCG,MAAAA,MAAM,EAAE,MADwB;AAChB;AAChBC,MAAAA,IAAI,EAAE,MAF0B;AAElB;AACdC,MAAAA,KAAK,EAAE,UAHyB;AAGb;AACnBC,MAAAA,WAAW,EAAE,aAJmB;AAIJ;AAC5BC,MAAAA,oBAAoB,EAAC,EALW;AAMjCC,MAAAA,QAAQ,EAAC,MANwB;AAOjCC,MAAAA,0BAA0B,EAAC,yDAPM;AAQjCC,MAAAA,UAAU,EAAE,EARqB;AAUhCC,MAAAA,OAAO,EAAE;AACV,wBAAgB,kBADN,CAEV;;AAFU,OAVuB;AAchCC,MAAAA,QAAQ,EAAE,QAdsB;AAcZ;AACpBC,MAAAA,cAAc,EAAE,aAfgB;AAeD;AAC/BC,MAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAenB,IAAf,CAhB0B,CAgBL;;AAhBK,KAAN,CAA5B;AAkBA,WAAOI,QAAQ,CAACgB,IAAT,EAAP,CApBE,CAoBsB;AACtB;;AAEDlB,EAAAA,QAAQ,GACRmB,IADA,CACKrB,IAAI,IAAI;AACZsB,IAAAA,OAAO,CAACC,GAAR,CAAYvB,IAAZ,EADY,CACO;AACpB,GAHA;AAOF,CAhED;;GAAMD,e;;KAAAA,e;AAqEN,eAAeA,eAAf","sourcesContent":["import { useState } from 'react'\n\nconst axios = require('axios')\n\n\nconst GetFeaturedNfts = () => {\n\n\tconst [data, setData] = useState([])\n\n\t// async function sample()\t{\n\n\t// \tvar userPostsDoc =[]\n\t\t\n\n\t// \t\tlet response=await axios.post('https://bitclout.com/api/v0/get-posts-for-public-key',{\n\t\t\n\t// \t\tPublicKeyBase58Check:\"\",\n\t// \t\tUsername:'manu',\n\t// \t\tReaderPublicKeyBase58Check:\"BC1YLin2QZLzk3GwnjwxYt4P11oLBNXsJtBdBSq9LEvdmVS7MN1qEag\",\n\t// \t\tNumToFetch: 10,\n\t\t\t\n\t// \t\t}, \n\t// \t\t{\n\t// \t\theaders: {\n\t// \t\t\t'Content-Type': 'application/json',\n\t// \t\t\t'Access-Control-Allow-Origin': 'http://localhost:3000'\n\t// \t\t}}).then(response=>{\n\t// \t\t\t//console.log(response);\n\t// \t\t\tsetData(response.data.Posts)\n\t// \t\t\tconsole.log(\"This is a sample line\")\n\t// \t\t\treturn response.data\n\n\t// \t\t}).catch(err=>{\n\t\t\t\n\t// \t\t})\n\t\n\t// }\n\n\tasync function postData(url = 'https://bitclout.com/api/v0/get-posts-for-public-key', data = {\n\t}) {\n\t\t// Default options are marked with *\n\t\tconst response = await fetch(url, {\n\t\t  method: 'POST', // *GET, POST, PUT, DELETE, etc.\n\t\t  mode: 'cors', // no-cors, *cors, same-origin\n\t\t  cache: 'no-cache', // *default, no-cache, reload, force-cache, only-if-cached\n\t\t  credentials: 'same-origin', // include, *same-origin, omit\n\t\t  PublicKeyBase58Check:\"\",\n\t\t\tUsername:'manu',\n\t\t\tReaderPublicKeyBase58Check:\"BC1YLin2QZLzk3GwnjwxYt4P11oLBNXsJtBdBSq9LEvdmVS7MN1qEag\",\n\t\t\tNumToFetch: 10,\n\t\t\t\n\t\t  headers: {\n\t\t\t'Content-Type': 'application/json'\n\t\t\t// 'Content-Type': 'application/x-www-form-urlencoded',\n\t\t  },\n\t\t  redirect: 'follow', // manual, *follow, error\n\t\t  referrerPolicy: 'no-referrer', // no-referrer, *no-referrer-when-downgrade, origin, origin-when-cross-origin, same-origin, strict-origin, strict-origin-when-cross-origin, unsafe-url\n\t\t  body: JSON.stringify(data) // body data type must match \"Content-Type\" header\n\t\t});\n\t\treturn response.json(); // parses JSON response into native JavaScript objects\n\t  }\n\t  \n\t  postData()\n\t\t.then(data => {\n\t\t  console.log(data); // JSON data parsed by `data.json()` call\n\t\t});\n\t \n\n\t\n}\n\t\t\n\t\n\n\nexport default GetFeaturedNfts"]},"metadata":{},"sourceType":"module"}